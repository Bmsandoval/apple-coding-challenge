// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/bryansandoval/projects/apple-coding-challenge/services/jokes/interface.go

// Package services_mocks is a generated GoMock package.
package services_mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// Mock_jokes is a mock of Service interface
type Mock_jokes struct {
	ctrl     *gomock.Controller
	recorder *Mock_jokesMockRecorder
}

// Mock_jokesMockRecorder is the mock recorder for Mock_jokes
type Mock_jokesMockRecorder struct {
	mock *Mock_jokes
}

// NewMock_jokes creates a new mock instance
func NewMock_jokes(ctrl *gomock.Controller) *Mock_jokes {
	mock := &Mock_jokes{ctrl: ctrl}
	mock.recorder = &Mock_jokesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Mock_jokes) EXPECT() *Mock_jokesMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *Mock_jokes) Get() (*string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].(*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *Mock_jokesMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*Mock_jokes)(nil).Get))
}
